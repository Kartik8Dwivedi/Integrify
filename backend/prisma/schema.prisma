// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @default(autoincrement()) @id
  email         String   @unique
  name          String
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Zap {
  id            String   @default(uuid()) @id
  triggerId     String
  trigger       Trigger?
  actions       Action[]
  zapRuns       ZapRun[]
}

model Trigger {
  id            String    @default(uuid()) @id
  zapId         String    @unique
  triggerId     String
  type          AvailableTrigger @relation(fields: [triggerId], references: [id])
  zap           Zap       @relation(fields: [zapId], references: [id])
}

model Action {
  id            String    @default(uuid()) @id
  zapId         String
  zap           Zap       @relation(fields: [zapId], references: [id])
  actionId      String
  type          AvailableAction @relation(fields: [actionId], references: [id])
  sortingOrder  Int @default(0)
}

model AvailableAction {
  id            String @default(uuid()) @id
  name          String
  actions       Action[]
}

model AvailableTrigger {
  id            String @default(uuid()) @id
  name          String
  triggers      Trigger[]
}

model ZapRun{
  id            String    @default(uuid()) @id
  zapId         String
  metadata      Json
  zap           Zap       @relation(fields: [zapId], references: [id])
  zapRunOutbox  ZapRunOutbox?
}

model ZapRunOutbox {
  id            String    @default(uuid()) @id
  zapRunId      String    @unique
  zapRun        ZapRun    @relation(fields: [zapRunId], references: [id])
}